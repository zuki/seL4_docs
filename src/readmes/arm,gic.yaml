# SPDX-License-Identifier: GPL-2.0
%YAML 1.2
---
$id: http://devicetree.org/schemas/interrupt-controller/arm,gic.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: ARM汎用割り込みコントローラ v1 and v2

maintainers:
  - Marc Zyngier <marc.zyngier@arm.com>

description: |+
  ARM SMPコアは多くの場合GICに関連付けられ、プロセッサ単位の割り込み（PPI）、
  共有プロセッサ割り込み（SPI）、ソフトウェア生成割り込み（SGI）を提供します。

  プライマリGICはCPUに直接接続され、通常、PPIとSGIを備えています。
  セカンダリGICは上位の割り込みコントローラにカスケード接続され、PPIやSGIを
  持ちません。

allOf:
  - $ref: /schemas/interrupt-controller.yaml#

properties:
  compatible:
    oneOf:
      - items:
          - enum:
              - arm,arm11mp-gic
              - arm,cortex-a15-gic
              - arm,cortex-a7-gic
              - arm,cortex-a5-gic
              - arm,cortex-a9-gic
              - arm,eb11mp-gic
              - arm,gic-400
              - arm,pl390
              - arm,tc11mp-gic
              - qcom,msm-8660-qgic
              - qcom,msm-qgic2

      - items:
          - const: arm,gic-400
          - enum:
              - arm,cortex-a15-gic
              - arm,cortex-a7-gic

      - items:
          - const: arm,arm1176jzf-devchip-gic
          - const: arm,arm11mp-gic

      - items:
          - const: brcm,brahma-b15-gic
          - const: arm,cortex-a15-gic

      - oneOf:
          - const: nvidia,tegra210-agic
          - items:
              - enum:
                  - nvidia,tegra186-agic
                  - nvidia,tegra194-agic
              - const: nvidia,tegra210-agic

  interrupt-controller: true

  "#address-cells":
    enum: [ 0, 1 ]
  "#size-cells":
    const: 1

  "#interrupt-cells":
    const: 3
    description: |
      1番目のセルは割り込みタイプです: 0はSPI割り込み、1はPPI割り込み。

      2番目のセルはその割り込みタイプに対応する割り込み番号です。
      SPI割り込みは[0-987]、 PPI割り込みは[0-15]の範囲です。

      3番目のセルはフラグで、次のように符号化されます:
        ビット[3:0] トリガーのタイプとレベルフラグ。
          1 = Low-to-High エッジトリガー
          2 = High-to-Low エッジトリガー（SPIでは無効）。
          4 = Active-High レベルセンシティブ
          8 = Active-Low レベルセンシティブ（SPIでは無効）。

        ビット[15:8] PPI割り込みcpuマスク。各ビットは、GICに接続される
        8つの可能なCPUに対応する。ビットを'1'にセットするとそのCPUに
        割り込みが配線されていることを示します。PPI割り込みに対してのみ
        有効です。また、PPI割り込みの設定可能性はIMPLEMENTATION DEFINEDで
        あり、その可能性は保証されていないことに注意してください（2014年現在
        利用可能なほとんどのSoCはこのフラグの設定を無視して、ハードウェアの
        デフォルト値を使用するようです）。

  reg:
    description: |
      GICレジスタのベース物理アドレスとサイズを指定します。最初の領域は
      GICディストリビュータレジスタのベースアドレスとサイズです。2番めの
      領域はGIC cpuインタフェースレジスタのベースアドレスとサイズです。

      仮想化拡張機能を持つGICv2の場合、VGICレジスタのベース物理アドレスと
      サイズを指定するための追加の領域が必要です。最初の追加領域はGIC仮想
      インタフェース制御レジスタのベースとサイズです。2番目の追加領域は
      GIC仮想CPUインタフェイスレジスタのベースとサイズです。
    minItems: 2
    maxItems: 4

  ranges: true

  interrupts:
    description: セカンダリGICでの親の割り込みコントローラの割り込みソース、
    または、プライマリGICでのVGICメンテナンス割り込みの割り込みソース（下記参照）。
    maxItems: 1

  cpu-offset:
    description: GICがバンクされたレジスタを持たない場合に使用される、
    ディストリビュータとCPUインタフェース領域内のCPUごとのオフセット。
    オフセットは cpu-offset * cpu-nr
    $ref: /schemas/types.yaml#/definitions/uint32

  clocks:
    minItems: 1
    maxItems: 2

  clock-names:
    description: GICクロック入力の名前のリストです。有効なクロック名は
      GICのバリアントによって異なります。
    oneOf:
      - const: ic_clk # for "arm,arm11mp-gic"
      - const: PERIPHCLKEN # for "arm,cortex-a15-gic"
      - items: # for "arm,cortex-a9-gic"
          - const: PERIPHCLK
          - const: PERIPHCLKEN
      - const: clk # for "arm,gic-400" and "nvidia,tegra210"
      - const: gclk #for "arm,pl390"

  power-domains:
    maxItems: 1

  resets:
    maxItems: 1

required:
  - compatible
  - reg

patternProperties:
  "^v2m@[0-9a-f]+$":
    type: object
    description: |
      * MSI/MSI-xサポートのためのGICv2m拡張（オプション）

      GIC-400の一部のリビジョンではV2MレジスタフレームによるMSI/MSI-xが
      サポートされています。これはv2mサブノードを指定することで有効になります。

    properties:
      compatible:
        const: arm,gic-v2m-frame

      msi-controller: true

      reg:
        maxItems: 1
        description: GICv2m MSI interface register base and size

      arm,msi-base-spi:
        description: When the MSI_TYPER register contains an incorrect value,
          this property should contain the SPI base of the MSI frame, overriding
          the HW value.
        $ref: /schemas/types.yaml#/definitions/uint32

      arm,msi-num-spis:
        description: When the MSI_TYPER register contains an incorrect value,
          this property should contain the number of SPIs assigned to the
          frame, overriding the HW value.
        $ref: /schemas/types.yaml#/definitions/uint32

    required:
      - compatible
      - msi-controller
      - reg

    additionalProperties: false

additionalProperties: false

examples:
  - |
    // GICv1
    intc: interrupt-controller@fff11000 {
      compatible = "arm,cortex-a9-gic";
      #interrupt-cells = <3>;
      #address-cells = <1>;
      interrupt-controller;
      reg = <0xfff11000 0x1000>,
            <0xfff10100 0x100>;
    };

  - |
    // GICv2
    interrupt-controller@2c001000 {
      compatible = "arm,cortex-a15-gic";
      #interrupt-cells = <3>;
      interrupt-controller;
      reg = <0x2c001000 0x1000>,
            <0x2c002000 0x2000>,
            <0x2c004000 0x2000>,
            <0x2c006000 0x2000>;
      interrupts = <1 9 0xf04>;
    };

  - |
    // GICv2m extension for MSI/MSI-x support
    interrupt-controller@e1101000 {
      compatible = "arm,gic-400";
      #interrupt-cells = <3>;
      #address-cells = <1>;
      #size-cells = <1>;
      interrupt-controller;
      interrupts = <1 8 0xf04>;
      ranges = <0 0xe1100000 0x100000>;
      reg = <0xe1110000 0x01000>,
            <0xe112f000 0x02000>,
            <0xe1140000 0x10000>,
            <0xe1160000 0x10000>;

      v2m0: v2m@80000 {
        compatible = "arm,gic-v2m-frame";
        msi-controller;
        reg = <0x80000 0x1000>;
      };

      //...

      v2mN: v2m@90000 {
        compatible = "arm,gic-v2m-frame";
        msi-controller;
        reg = <0x90000 0x1000>;
      };
    };
...
